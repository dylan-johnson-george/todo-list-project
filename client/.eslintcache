[{"/Users/dylan.johnson/Documents/Final Project/client/src/index.js":"1","/Users/dylan.johnson/Documents/Final Project/client/src/App.js":"2","/Users/dylan.johnson/Documents/Final Project/client/src/containers/LoginPage.js":"3","/Users/dylan.johnson/Documents/Final Project/client/src/components/Navbar.js":"4","/Users/dylan.johnson/Documents/Final Project/client/src/components/LoginCard.js":"5","/Users/dylan.johnson/Documents/Final Project/client/src/redux/reducers/index.js":"6","/Users/dylan.johnson/Documents/Final Project/client/src/redux/reducers/isAuthenticated.js":"7","/Users/dylan.johnson/Documents/Final Project/client/src/redux/actions/index.js":"8","/Users/dylan.johnson/Documents/Final Project/client/src/containers/TasksPage.js":"9","/Users/dylan.johnson/Documents/Final Project/client/src/components/ListItem.js":"10","/Users/dylan.johnson/Documents/Final Project/client/src/redux/reducers/getTodosReducer.js":"11","/Users/dylan.johnson/Documents/Final Project/client/src/utils.js/serverDomain.js":"12","/Users/dylan.johnson/Desktop/Todo-List-Project/server/client/src/index.js":"13","/Users/dylan.johnson/Desktop/Todo-List-Project/server/client/src/App.js":"14","/Users/dylan.johnson/Desktop/Todo-List-Project/server/client/src/redux/reducers/index.js":"15","/Users/dylan.johnson/Desktop/Todo-List-Project/server/client/src/containers/TasksPage.js":"16","/Users/dylan.johnson/Desktop/Todo-List-Project/server/client/src/containers/LoginPage.js":"17","/Users/dylan.johnson/Desktop/Todo-List-Project/server/client/src/redux/actions/index.js":"18","/Users/dylan.johnson/Desktop/Todo-List-Project/server/client/src/redux/reducers/getTodosReducer.js":"19","/Users/dylan.johnson/Desktop/Todo-List-Project/server/client/src/redux/reducers/isAuthenticated.js":"20","/Users/dylan.johnson/Desktop/Todo-List-Project/server/client/src/components/ListItem.js":"21","/Users/dylan.johnson/Desktop/Todo-List-Project/server/client/src/components/LoginCard.js":"22","/Users/dylan.johnson/Desktop/Todo-List-Project/server/client/src/components/Navbar.js":"23"},{"size":782,"mtime":1609236386977,"results":"24","hashOfConfig":"25"},{"size":1263,"mtime":1610112456768,"results":"26","hashOfConfig":"25"},{"size":241,"mtime":1608301075333,"results":"27","hashOfConfig":"25"},{"size":2087,"mtime":1610111278310,"results":"28","hashOfConfig":"25"},{"size":825,"mtime":1609963619618,"results":"29","hashOfConfig":"25"},{"size":282,"mtime":1609234503400,"results":"30","hashOfConfig":"25"},{"size":253,"mtime":1608555349584,"results":"31","hashOfConfig":"25"},{"size":865,"mtime":1610111660477,"results":"32","hashOfConfig":"25"},{"size":1914,"mtime":1610097819853,"results":"33","hashOfConfig":"25"},{"size":1448,"mtime":1610097833688,"results":"34","hashOfConfig":"25"},{"size":561,"mtime":1609234244212,"results":"35","hashOfConfig":"25"},{"size":162,"mtime":1610113250834,"results":"36","hashOfConfig":"25"},{"size":782,"mtime":1610354981000,"results":"37","hashOfConfig":"38"},{"size":1212,"mtime":1610358008752,"results":"39","hashOfConfig":"38"},{"size":282,"mtime":1610354981000,"results":"40","hashOfConfig":"38"},{"size":1847,"mtime":1610374249986,"results":"41","hashOfConfig":"38"},{"size":241,"mtime":1610354981000,"results":"42","hashOfConfig":"38"},{"size":795,"mtime":1610362491535,"results":"43","hashOfConfig":"38"},{"size":561,"mtime":1610354981000,"results":"44","hashOfConfig":"38"},{"size":253,"mtime":1610354981000,"results":"45","hashOfConfig":"38"},{"size":1385,"mtime":1610374749473,"results":"46","hashOfConfig":"38"},{"size":825,"mtime":1610354981000,"results":"47","hashOfConfig":"38"},{"size":2035,"mtime":1610373724048,"results":"48","hashOfConfig":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"1l1b7zv",{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"51"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"51"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"164yc3t",{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"78"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"78"},"/Users/dylan.johnson/Documents/Final Project/client/src/index.js",[],["101","102"],"/Users/dylan.johnson/Documents/Final Project/client/src/App.js",["103","104"],"/Users/dylan.johnson/Documents/Final Project/client/src/containers/LoginPage.js",[],"/Users/dylan.johnson/Documents/Final Project/client/src/components/Navbar.js",["105","106"],"import '../index.css'\nimport { Link, useHistory } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport axios from 'axios'\nimport { useDispatch } from 'react-redux'\nimport { logOut } from '../redux/actions/index'\nimport serverDomain from '../utils.js/serverDomain'\n\nconst Navbar = (props) => {\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  const logOutUser = async () => {\n    try {\n      const user = await axios.get('/logout', {\n        withCredentials: true\n      })\n      if(user.data === '') {\n        dispatch(logOut())\n        history.push('/')\n      }\n    } catch(e) {\n      console.log(e)\n    }\n  }\n\n  const isUserLoggedIn = useSelector(state => state.isAuthenticated)\n\n  return (\n    <nav className='navbar navbar-expand-lg navbar-light bg-light border-bottom shadow-sm'>\n      <div className='container-fluid'>\n        <Link className=\"navbar-brand\" to='/'>Task Manager</Link>\n        {isUserLoggedIn &&\n        <>\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse justify-content-end\" id=\"navbarNavDropdown\">\n            <ul className=\"navbar-nav\">\n              <li className=\"nav-item dropdown\">\n                <a className=\"nav-link dropdown-toggle mr-5\" href=\"#\" id=\"navbarDropdownMenuLink\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                  <i class=\"fas fa-users-cog user-icon\"></i>\n                </a>\n                <ul class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\n                  <li><Link to=\"/tasks\" className=\"dropdown-item\" >Tasks</Link></li>\n                  <li className='dropdown-item' onClick={logOutUser}>Log out</li>\n                </ul>\n              </li>\n            </ul>\n          </div>\n        </>\n        }\n      </div>\n    </nav>    \n  )\n}\n\nexport default Navbar","/Users/dylan.johnson/Documents/Final Project/client/src/components/LoginCard.js",[],"/Users/dylan.johnson/Documents/Final Project/client/src/redux/reducers/index.js",[],"/Users/dylan.johnson/Documents/Final Project/client/src/redux/reducers/isAuthenticated.js",[],"/Users/dylan.johnson/Documents/Final Project/client/src/redux/actions/index.js",[],"/Users/dylan.johnson/Documents/Final Project/client/src/containers/TasksPage.js",["107","108"],"import Navbar from '../components/Navbar'\nimport { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport ListItem from '../components/ListItem'\nimport { fetchTodos } from '../redux/actions/index'\nimport { useDispatch, useSelector} from 'react-redux'\nimport serverDomain from '../utils.js/serverDomain'\n\nconst TasksPage = () => {\n  const dispatch = useDispatch()\n  const [todoText, setTodoText] = useState('')\n\n  useEffect(() => {\n    dispatch(fetchTodos())\n  }, [])\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    try {\n      const newTodo = await axios({\n        method: 'post',\n        url: `${serverDomain}/todos`,\n        data: {\n          title: todoText\n        },\n        withCredentials: true,\n        headers: {\n          'Content-Type': 'application/json',\n      }\n      })\n      dispatch(fetchTodos())\n    } catch(e) {\n      \n    }\n  }\n\n  const handleChange = (e) => {\n    setTodoText(e.target.value)\n  }\n\n\n  const todos = useSelector(state => state.todos.todos)\n  return (\n    <div>\n      <Navbar />\n      <div className='container text-center mt-5 pt-5 border shadow-sm bg-white w-75'>\n        <h2 className=\"text-muted\">What's on today?</h2>\n        <form className='form-inline' onSubmit={handleSubmit}>\n          <div class=\"form-group mb-5 form-inline\">\n            <input type=\"text\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Add task!\" onChange={handleChange}/>\n            <button type=\"submit\" class=\"btn btn-primary  mt-2\">Submit</button>\n          </div>\n        </form>\n      </div>\n      {todos.length > 0 &&  \n      <ul className='container mt-5  border shadow-sm w-75 bg-white'>\n        {todos.map((todoItem, key) => {\n         return <ListItem key={key} id={todoItem._id} title={todoItem.title} completed={todoItem.completed}/>\n        })}\n      </ul>\n      }\n    </div>\n  )\n}\n\n\nexport default TasksPage\n\n","/Users/dylan.johnson/Documents/Final Project/client/src/components/ListItem.js",[],"/Users/dylan.johnson/Documents/Final Project/client/src/redux/reducers/getTodosReducer.js",[],"/Users/dylan.johnson/Documents/Final Project/client/src/utils.js/serverDomain.js",[],"/Users/dylan.johnson/Desktop/Todo-List-Project/server/client/src/index.js",[],["109","110"],"/Users/dylan.johnson/Desktop/Todo-List-Project/server/client/src/App.js",["111"],"import { useEffect } from 'react'\nimport { logIn, logOut } from './redux/actions'\nimport { useDispatch, useSelector} from 'react-redux'\nimport LoginPage from '../src/containers/LoginPage'\nimport axios from 'axios'\nimport { Route, Switch, useHistory } from 'react-router-dom' \nimport TasksPage from './containers/TasksPage'\n\nfunction App() {  \n  const isUserLoggedIn = useSelector(state => state.isAuthenticated)\n// Come back to look into how to fix the dependency warning\n  const dispatch = useDispatch()\n  const history = useHistory()\n  useEffect(() => {\n    const checkAuthentication = async () => {\n      try {\n        const userStatus = await axios.get(`/current_user`, {\n          withCredentials: true,\n        })\n        \n        if(userStatus.data.googleId && !isUserLoggedIn) {\n          dispatch(logIn()) \n        } else {\n          dispatch(logOut())\n          history.push('/')\n        }\n      } catch(e) {\n         console.log(e)\n      } \n    }\n    checkAuthentication()\n  }, [])\n\n\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path='/' component={LoginPage} exact /> \n        <Route path='/tasks' component={TasksPage} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/dylan.johnson/Desktop/Todo-List-Project/server/client/src/redux/reducers/index.js",[],"/Users/dylan.johnson/Desktop/Todo-List-Project/server/client/src/containers/TasksPage.js",["112","113"],"/Users/dylan.johnson/Desktop/Todo-List-Project/server/client/src/containers/LoginPage.js",[],"/Users/dylan.johnson/Desktop/Todo-List-Project/server/client/src/redux/actions/index.js",[],"/Users/dylan.johnson/Desktop/Todo-List-Project/server/client/src/redux/reducers/getTodosReducer.js",[],"/Users/dylan.johnson/Desktop/Todo-List-Project/server/client/src/redux/reducers/isAuthenticated.js",[],"/Users/dylan.johnson/Desktop/Todo-List-Project/server/client/src/components/ListItem.js",[],"/Users/dylan.johnson/Desktop/Todo-List-Project/server/client/src/components/LoginCard.js",[],"/Users/dylan.johnson/Desktop/Todo-List-Project/server/client/src/components/Navbar.js",["114"],"import '../index.css'\nimport { Link, useHistory } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport axios from 'axios'\nimport { useDispatch } from 'react-redux'\nimport { logOut } from '../redux/actions/index'\n\nconst Navbar = (props) => {\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  const logOutUser = async () => {\n    try {\n      const user = await axios.get('/logout', {\n        withCredentials: true\n      })\n      if(user.data === '') {\n        dispatch(logOut())\n        history.push('/')\n      }\n    } catch(e) {\n      console.log(e)\n    }\n  }\n\n  const isUserLoggedIn = useSelector(state => state.isAuthenticated)\n\n  return (\n    <nav className='navbar navbar-expand-lg navbar-light bg-light border-bottom shadow-sm'>\n      <div className='container-fluid'>\n        <Link className=\"navbar-brand\" to='/'>Task Manager</Link>\n        {isUserLoggedIn &&\n        <>\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse justify-content-end\" id=\"navbarNavDropdown\">\n            <ul className=\"navbar-nav\">\n              <li className=\"nav-item dropdown\">\n                <a className=\"nav-link dropdown-toggle mr-5\" href=\"#\" id=\"navbarDropdownMenuLink\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                  <i class=\"fas fa-users-cog user-icon\"></i>\n                </a>\n                <ul class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\n                  <li><Link to=\"/tasks\" className=\"dropdown-item\" >Tasks</Link></li>\n                  <li className='dropdown-item' onClick={logOutUser}>Log out</li>\n                </ul>\n              </li>\n            </ul>\n          </div>\n        </>\n        }\n      </div>\n    </nav>    \n  )\n}\n\nexport default Navbar",{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":8,"column":8,"nodeType":"121","messageId":"122","endLine":8,"endColumn":20},{"ruleId":"123","severity":1,"message":"124","line":33,"column":6,"nodeType":"125","endLine":33,"endColumn":8,"suggestions":"126"},{"ruleId":"119","severity":1,"message":"120","line":7,"column":8,"nodeType":"121","messageId":"122","endLine":7,"endColumn":20},{"ruleId":"127","severity":1,"message":"128","line":41,"column":17,"nodeType":"129","endLine":41,"endColumn":161},{"ruleId":"123","severity":1,"message":"130","line":15,"column":6,"nodeType":"125","endLine":15,"endColumn":8,"suggestions":"131"},{"ruleId":"119","severity":1,"message":"132","line":20,"column":13,"nodeType":"121","messageId":"122","endLine":20,"endColumn":20},{"ruleId":"115","replacedBy":"133"},{"ruleId":"117","replacedBy":"134"},{"ruleId":"123","severity":1,"message":"124","line":32,"column":6,"nodeType":"125","endLine":32,"endColumn":8,"suggestions":"135"},{"ruleId":"123","severity":1,"message":"130","line":14,"column":6,"nodeType":"125","endLine":14,"endColumn":8,"suggestions":"136"},{"ruleId":"119","severity":1,"message":"132","line":19,"column":13,"nodeType":"121","messageId":"122","endLine":19,"endColumn":20},{"ruleId":"127","severity":1,"message":"128","line":40,"column":17,"nodeType":"129","endLine":40,"endColumn":161},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"no-unused-vars","'serverDomain' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'history', and 'isUserLoggedIn'. Either include them or remove the dependency array.","ArrayExpression",["139"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["140"],"'newTodo' is assigned a value but never used.",["137"],["138"],["141"],["142"],"no-global-assign","no-unsafe-negation",{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},{"desc":"143","fix":"147"},{"desc":"145","fix":"148"},"Update the dependencies array to be: [dispatch, history, isUserLoggedIn]",{"range":"149","text":"150"},"Update the dependencies array to be: [dispatch]",{"range":"151","text":"152"},{"range":"153","text":"150"},{"range":"154","text":"152"},[1040,1042],"[dispatch, history, isUserLoggedIn]",[476,478],"[dispatch]",[989,991],[424,426]]